// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux8Way(in=load,a=reg0,b=reg1,c=reg2,d=reg3,e=reg4,f=reg5,g=reg6,h=reg7,sel=address[6..8]);
	RAM64(in=in,load=reg0,address=address[0..5],out=reg0out);
	RAM64(in=in,load=reg1,address=address[0..5],out=reg1out);
	RAM64(in=in,load=reg2,address=address[0..5],out=reg2out);
	RAM64(in=in,load=reg3,address=address[0..5],out=reg3out);
	RAM64(in=in,load=reg4,address=address[0..5],out=reg4out);
	RAM64(in=in,load=reg5,address=address[0..5],out=reg5out);
	RAM64(in=in,load=reg6,address=address[0..5],out=reg6out);
	RAM64(in=in,load=reg7,address=address[0..5],out=reg7out);
	Mux8Way16(a=reg0out,b=reg1out,c=reg2out,d=reg3out,e=reg4out,f=reg5out,g=reg6out,h=reg7out,sel=address[6..8],out=out);
}